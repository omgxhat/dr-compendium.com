/* ===== Skills (MC grid) ===== */

/* Tunables */
:root {
  --mc-scale: 3;
  --slot-size: calc(18px * var(--mc-scale));
  --pane-pad: 2px;                 /* inner margin used by pane AND icon */

  /* textures */
  --tex-pane-gray:   url("../images/assets/panes/gray.png");
  --tex-pane-yellow: url("../images/assets/panes/yellow.png");
  --tex-pane-green:  url("../images/assets/panes/green.png");
  --tex-slot:        url("../images/assets/gui/slot.png");
}

/* Page shell */
.topbar + .skills-main { margin-top: 56px; }
.skills-main { max-width: 1100px; margin: 0 auto; padding: 1rem; }

/* Controls */
.skills-controls {
  display: grid;
  grid-template-columns: repeat(4, auto) 1fr;
  gap: .75rem 1rem;
  align-items: center;
  background: #151515;
  border: 1px solid #242424;
  border-radius: 10px;
  padding: .75rem 1rem;
  margin-bottom: 1rem;
}
.skills-controls label { display: inline-grid; gap: .25rem; font-size: .85rem; color: #bbb; }
.skills-controls select,
.skills-controls input {
  background: #1b1b1b; color: #eee;
  border: 1px solid #2b2b2b; border-radius: 8px;
  padding: .4rem .6rem; min-width: 9rem;
}
.points { font-weight: 700; color: #fff; }
.actions { justify-self: end; display: flex; gap: .5rem; }

/* Board: 9 × 6 chest grid */
.mc-board {
  width: calc(var(--slot-size) * 9);
  display: grid;
  grid-template-columns: repeat(9, var(--slot-size));
  grid-template-rows: repeat(6, var(--slot-size));
  margin: 0 auto;
  image-rendering: pixelated;
}

/* Slot */
.mc-slot {
  position: relative;
  width: var(--slot-size);
  height: var(--slot-size);
  background: var(--tex-slot) no-repeat center / 100% 100%;
  image-rendering: pixelated;
}

/* Pane overlay */
.mc-slot .pane {
  position: absolute;
  inset: var(--pane-pad);
  background: center / 100% 100% no-repeat;
  image-rendering: pixelated;
  pointer-events: none;
  opacity: .95;
  z-index: 1;
}

/* State coloring */
.mc-slot.state-empty    .pane { background-image: var(--tex-pane-gray); }
.mc-slot.state-progress .pane { background-image: var(--tex-pane-yellow); }
.mc-slot.state-max      .pane { background-image: var(--tex-pane-green); }
/* unlocked but unspent = yellow */
.mc-slot.state-available .pane { background-image: var(--tex-pane-yellow); }

/* Locked hint (optional) */
.mc-slot.locked { filter: brightness(.75) grayscale(.2); }

/* Icon (e.g., end crystal) – same box as pane, perfectly centered */
.mc-slot .item {
  position: absolute;
  left: 50%;
  top: 50%;
  width:  calc(var(--slot-size) - (var(--pane-pad) * 2));
  height: calc(var(--slot-size) - (var(--pane-pad) * 2));
  transform: translate(-50%, -50%);
  object-fit: contain;
  object-position: center;
  image-rendering: pixelated;
  z-index: 2;
}

/* Hover ring */
.mc-slot:hover::after {
  content: "";
  position: absolute;
  inset: 0;
  box-shadow: 0 0 0 3px rgba(255,255,255,.12);
  border-radius: 2px;
}

/* Tooltip (MC-style 9-slice if provided) */
.mc-tooltip {
  position: fixed;
  z-index: 20;
  color: #fff;
  font-size: 14px;
  line-height: 1.25;
  max-width: 320px;
  pointer-events: none;
  padding: 10px 12px;
  background: #2b1032; /* fallback */
  border: 12px solid transparent;
  border-image-source: url("../assets/mc/gui/tooltip_9slice.png");
  border-image-slice: 12 fill;
  border-image-width: 12;
}
.mc-tooltip .title { color: #ffd966; font-weight: 800; margin-bottom: 4px; text-shadow: 1px 1px 0 rgba(0,0,0,.5); }
.mc-tooltip .meta  { color: #ccc; white-space: pre-line; }  /* preserve \n */
.mc-tooltip .good  { color: #55FF55; }
.mc-tooltip .warn  { color: #FFFF55; }
/* gap between lore and current/next */
.mc-tooltip .dyn { margin-top: 8px; }

/* Responsive */
@media (max-width: 900px) {
  :root { --mc-scale: 2.4; }
}
@media (max-width: 720px) {
  :root { --mc-scale: 2; }
  .skills-controls { grid-template-columns: 1fr 1fr; }
  .actions { grid-column: 1 / -1; justify-self: start; }
}
